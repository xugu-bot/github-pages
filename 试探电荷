<!DOCTYPE html>
<html>
<head>
    <title>电场力与试探电荷关系演示</title>
    <style>
        .container {
            width: 800px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 10px;
        }
        canvas {
            border: 1px solid #000;
            margin: 20px 0;
        }
        .controls {
            display: flex;
            gap: 20px;
            align-items: center;
        }
        .formula {
            background: #f0f0f0;
            padding: 10px;
            margin: 10px 0;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>电场力与试探电荷关系演示</h2>
        <div class="formula">
            公式表示：F = q × E ⇒ F/q = E (常量)
        </div>
        <canvas id="fieldCanvas" width="800" height="300"></canvas>
        <div class="controls">
            <label>试探电荷量 q (q₁倍数): 
                <input type="range" id="chargeSlider" min="1" max="5" value="1" step="1">
                <span id="chargeValue">1q₁</span>
            </label>
            <div>
                <div>当前电场力 F: <span id="forceValue">F₁</span></div>
                <div>F/q 比值: <span id="ratioValue">F₁/q₁</span></div>
            </div>
        </div>
    </div>

    <script>
        const canvas = document.getElementById('fieldCanvas');
        const ctx = canvas.getContext('2d');
        const chargeSlider = document.getElementById('chargeSlider');
        
        // 电场参数
        const sourceCharge = {
            x: 100,
            y: 150,
            radius: 20,
            color: '#FF4444'
        };

        // 初始试探电荷参数
        let testCharge = {
            x: 400,
            y: 150,
            radius: 15,
            color: '#4444FF',
            q: 1
        };

        function drawArrow(fromX, fromY, toX, toY) {
            const headLength = 15;
            const dx = toX - fromX;
            const dy = toY - fromY;
            const angle = Math.atan2(dy, dx);
            
            ctx.beginPath();
            ctx.moveTo(fromX, fromY);
            ctx.lineTo(toX, toY);
            ctx.strokeStyle = '#000';
            ctx.lineWidth = 2;
            ctx.stroke();

            ctx.beginPath();
            ctx.moveTo(toX, toY);
            ctx.lineTo(toX - headLength * Math.cos(angle - Math.PI/6), 
                      toY - headLength * Math.sin(angle - Math.PI/6));
            ctx.lineTo(toX - headLength * Math.cos(angle + Math.PI/6), 
                      toY - headLength * Math.sin(angle + Math.PI/6));
            ctx.closePath();
            ctx.fillStyle = '#000';
            ctx.fill();
        }

        function drawScene() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            
            // 绘制场源电荷
            ctx.beginPath();
            ctx.arc(sourceCharge.x, sourceCharge.y, sourceCharge.radius, 0, Math.PI * 2);
            ctx.fillStyle = sourceCharge.color;
            ctx.fill();
            ctx.fillStyle = '#000';
            ctx.textAlign = 'center';
            ctx.fillText('场源电荷', sourceCharge.x, sourceCharge.y + 35);

            // 绘制试探电荷
            ctx.beginPath();
            ctx.arc(testCharge.x, testCharge.y, testCharge.radius, 0, Math.PI * 2);
            ctx.fillStyle = testCharge.color;
            ctx.fill();
            ctx.fillStyle = '#000';
            ctx.fillText(testCharge.q + 'q₁', testCharge.x, testCharge.y + 25);

            // 绘制电场线
            const forceLength = testCharge.q * 30; // 电场力箭头长度与电荷量成正比
            drawArrow(testCharge.x, testCharge.y, 
                     testCharge.x + forceLength, testCharge.y);
        }

        function updateValues() {
            const q = parseInt(chargeSlider.value);
            testCharge.q = q;
            document.getElementById('chargeValue').textContent = q + 'q₁';
            document.getElementById('forceValue').textContent = q + 'F₁';
            document.getElementById('ratioValue').textContent = 'F₁/q₁ (常量)';
            drawScene();
        }

        chargeSlider.addEventListener('input', updateValues);
        drawScene();
    </script>
</body>
</html>
